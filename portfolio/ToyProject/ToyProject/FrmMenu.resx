<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>